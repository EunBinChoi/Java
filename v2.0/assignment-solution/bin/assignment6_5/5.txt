interface 안에 정의할 수 있는 것은 상수와 메소드들이 있습니다.
상수: static final
메소드: abstract method, default method, static method
- 1) 해당 상수와 메소드들이 왜 필요한지 생각해보고 이유를 서술하시오.
- default method, static method는 자바 8 이후로 interface 안에 정의할 수 있게 되었는데
왜 추가적으로 만들었는지 중심으로 생각해보세요.
>> 어떤 클래스가 구현하는 데 도움을 주는 인터페이스는 메소드를 구현하기 위해서 필요한 상수를 생성할 수 있으며
추상 메서드로 구현해서 자식이 구현할 수 있도록 처음에 만들어졌지만 해당 방법에 문제점이 많음
>> 가령, 추상 메서드가 있는 인터페이스를 구현하고 있는 클래스에서 추상 메서드를 구현을 하지 않으면 오류가 남
>> 새로운 추상 메서드를 만들면 해당 인터페이스를 구현하고 있는 클래스에서 재정의해줘야하는 의무를 가짐
>> 이러한 문제점을 해소하기 위해 default method가 만들어졌으며 해당 메소드는 디폴트값을 지닐 수 있기 때문에 재정의하지 않아도 오류가 나지 않음
>> (만약 재정의하지 않으면 디폴트값으로 출력됨)
>> 하지만, 내부적으로는 default method는 추상 메서드와 동일하게 인스턴스가 생성될 때마다 각 인스턴스 메모리에 할당되는 인스턴스 메소드임
>> (추상 메서든데 디폴트값이 있는 추상 메서드 같은 느낌임)
>> 만약 각 인스턴스 별로 따로 메소드를 메모리에 할당하지 않고 객체와 상관없이 동일한 메소드를 가지게 하기 위해서 static method도 인터페이스에 정의가능하도록 만듦
>> (인터페이스 이름.추상메서드)로 접근함


- 2) 상수와 메소드가 public이 아닌 다른 접근제어자로 정의할 수 있을지 생각해보고 이유를 서술하시오.
>> private로 가능한 메서드가 존재 (private static method / private method (general method))
>> 이렇게 사용하는 이유는 외부에 노출하는 메서드가 아니라 다른 메서드 안에서 static method를 호출하기 위함임
>> 하지만 private default method, private static method는 안됨 (인스턴스 메소드이기 때문에 open 되어있어야 함)
>> 상수도 public static final만 가능 (보통 상수는 해당 인터페이스를 구현할 클래스에 인터페이스에 대한 정보를 알려주기 위해 사용하기 떄문)